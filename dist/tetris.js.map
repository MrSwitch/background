{"version":3,"sources":["dist/node_modules/browser-pack/_prelude.js","dist/node_modules/tricks/array/toArray.js","dist/node_modules/tricks/dom/each.js","dist/node_modules/tricks/dom/isDom.js","dist/node_modules/tricks/events/createDummyEvent.js","dist/node_modules/tricks/events/createEvent.js","dist/node_modules/tricks/events/on.js","dist/node_modules/tricks/events/swipe.js","dist/node_modules/tricks/events/touch.js","dist/node_modules/tricks/object/Queue.js","dist/node_modules/tricks/object/instanceOf.js","dist/node_modules/tricks/support/requestAnimationFrame.js","dist/src/classes/background.js","dist/src/classes/canvas.js","dist/src/classes/collection.js","dist/src/classes/rect.js","dist/src/classes/shape.js","dist/src/classes/text.js","dist/src/tetris.js"],"names":[],"mappings":"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","file":"tetris.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","module.exports = obj => Array.prototype.slice.call(obj);\n","const isDom = require('./isDom.js');\nconst instanceOf = require('../object/instanceOf.js');\nconst toArray = require('../array/toArray.js');\n\nmodule.exports = (matches, callback = () => {}) => {\n\n\tif (isDom(matches)) {\n\t\tmatches = [matches];\n\t}\n\telse if (typeof(matches) === 'string') {\n\t\tmatches = document.querySelectorAll(matches);\n\t}\n\n\tif (!instanceOf(matches, Array)) {\n\t\tmatches = toArray(matches);\n\t}\n\n\tif (callback) {\n\t\tmatches.forEach(callback);\n\t}\n\n\treturn matches;\n};\n","const instanceOf = require('../object/instanceOf.js');\n\nconst _HTMLElement = typeof HTMLElement !== 'undefined' ? HTMLElement : Element;\nconst _HTMLDocument = typeof HTMLDocument !== 'undefined' ? HTMLDocument : Document;\nconst _Window = window.constructor;\n\nmodule.exports = test =>\n\tinstanceOf(test, _HTMLElement) ||\n\t\tinstanceOf(test, _HTMLDocument) ||\n\t\tinstanceOf(test, _Window)\n;\n","module.exports = e => {\n\te.stopPropagation = () => {};\n\te.preventDefault = () => {};\n\treturn e;\n};\n","// IE does not support `new Event()`\n// See https://developer.mozilla.org/en-US/docs/Web/Guide/Events/Creating_and_triggering_events for details\nconst dict = {bubbles: true, cancelable: true};\n\nlet createEvent = (eventname, options = dict) =>\n\tnew Event(eventname, options);\n\ntry {\n\tcreateEvent('test');\n}\ncatch (e) {\n\tcreateEvent = (eventname, options = dict) => {\n\t\tconst e = document.createEvent('Event');\n\t\te.initEvent(eventname, !!options.bubbles, !!options.cancelable);\n\t\treturn e;\n\t};\n}\n\nmodule.exports = createEvent;\n","// on.js\n// Listen to events, this is a wrapper for addEventListener\n\nconst each = require('../dom/each.js');\nconst SEPERATOR = /[\\s,]+/;\n\n// See https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md#feature-detection\nlet supportsPassive = false;\ntry {\n\tconst opts = Object.defineProperty({}, 'passive', {\n\t\tget() {\n\t\t\tsupportsPassive = true;\n\t\t}\n\t});\n\twindow.addEventListener('test', null, opts);\n}\ncatch (e) {\n\t// Continue\n}\n\n\nmodule.exports = (elements, eventnames, callback, options = false) => {\n\n\tif (typeof options === 'object' && options.passive && !supportsPassive) {\n\t\t// Override the passive mark\n\t\toptions = false;\n\t}\n\n\teventnames = eventnames.split(SEPERATOR);\n\treturn each(elements, el => eventnames.forEach(eventname => el.addEventListener(eventname, callback, options)));\n};\n","// swipe\n// Checks for a swipe to the left or to the right\n\nconst touch = require('./touch.js');\nconst {gesture} = touch;\n\nmodule.exports = (elements, callback) =>\n\n\ttouch(elements, function(e, o, s) {\n\n\t\tgesture(e, s);\n\n\t\te.gesture.type = `drag${e.gesture.direction}`;\n\n\t\tcallback.call(this, e);\n\n\t},\n\tfunction (e) {\n\t\tgesture(e);\n\t\te.gesture.type = 'start';\n\t\tcallback.call(this, e);\n\t},\n\tfunction(e) {\n\n\t\tconst g = e.gesture;\n\n\t\t// How long did this operation take?\n\t\tif (g.deltaTime < 200 && g.distance > 20 && g.velocity > 0.3) {\n\t\t\tg.type = `swipe${g.direction}`;\n\t\t}\n\t\telse if (g.distance < 20) {\n\t\t\tg.type = 'click';\n\t\t}\n\t\telse {\n\t\t\tg.type = 'release';\n\t\t}\n\n\t\tcallback.call(this, e);\n\t})\n;\n","// Standardizes touch events\n// Calculate the difference from the starting position and the end position.\n// Returns a gesture object given\n\nconst on = require('./on.js');\nconst each = require('../dom/each.js');\n\n// Does this support pointer events?\nconst pointerEnabled = window.navigator.pointerEnabled;\nconst eventMoveTypes = pointerEnabled ? 'MSPointerMove pointerMove' : 'mousemove touchmove';\nconst eventStartTypes = pointerEnabled ? 'MSPointerDown pointerDown' : 'mousedown touchstart';\nconst eventEndTypes = pointerEnabled ? 'MSPointerUp pointerUp' : 'mouseup touchend touchcancel';\n\n// Touch\n// @param callback function - Every touch event fired\n// @param complete function- Once all touch event ends\nmodule.exports = (elements, onmove, onstart, onend) => {\n\n\t// Store callbacks, and previous pointer position\n\tconst cb = {};\n\tconst mv = {};\n\tconst fin = {};\n\n\ton(document, eventMoveTypes, moveEvent => {\n\n\t\t// Fix Android not firing multiple moves\n\t\t// if (e.type.match(/touch/i)) {\n\t\t// \te.preventDefault();\n\t\t// }\n\n\t\t// Pointer/Mouse down?\n\t\tif (voidEvent(moveEvent)) {\n\t\t\t// The mouse buttons isn't pressed, kill this\n\t\t\treturn;\n\t\t}\n\n\t\t// trigger the call\n\t\tconst i = moveEvent.pointerId || 0;\n\t\tconst handler = cb[i];\n\n\t\tif (handler && typeof(handler) === 'function') {\n\n\t\t\tconst prevEvent = mv[i];\n\n\t\t\t// Extend the Event Object with 'gestures'\n\t\t\tgesture(moveEvent, prevEvent);\n\n\t\t\t// Trigger callback\n\t\t\thandler(moveEvent, prevEvent);\n\t\t}\n\n\t\tmv[i] = moveEvent;\n\t});\n\n\ton(document, eventEndTypes, e => {\n\n\t\tconst i = e.pointerId || 0;\n\t\tcb[i] = null;\n\n\t\tif (e.type === 'touchend' || e.type === 'touchcancel') {\n\t\t\te = mv[i];\n\t\t}\n\n\t\tconst handler = fin[i];\n\t\tif (handler) {\n\t\t\thandler(e);\n\t\t}\n\n\t\tfin[i] = null;\n\t});\n\n\t// loop through and add events\n\teach(elements, element => {\n\n\t\t// bind events\n\t\t// on(element, 'touchend', e => {\n\t\t// \tconsole.log('el:touchend');\n\t\t// \tconsole.log(e);\n\t\t// });\n\n\t\ton(element, 'selectstart', () => false);\n\n\t\ton(element, eventStartTypes, startEvent => {\n\n\t\t\t// default pointer ID\n\t\t\tconst i = startEvent.pointerId || 0;\n\n\t\t\t// Add Gestures to event Object\n\t\t\tgesture(startEvent);\n\n\t\t\tmv[i] = startEvent;\n\t\t\tcb[i] = (moveEvent, prevMoveEvent) => {\n\t\t\t\tonmove.call(element, moveEvent, prevMoveEvent, startEvent);\n\t\t\t};\n\n\t\t\tif (onend) {\n\t\t\t\tfin[i] = endEvent => {\n\n\t\t\t\t\t// Add Gestures to event Object\n\t\t\t\t\tgesture(endEvent, startEvent);\n\n\t\t\t\t\t// fire complete callback\n\t\t\t\t\tonend.call(element, endEvent, startEvent);\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// trigger start\n\t\t\tif (onstart) {\n\t\t\t\tonstart.call(element, startEvent);\n\t\t\t}\n\t\t});\n\t});\n};\n\nfunction gesture(currEvent, prevEvent) {\n\n\t// Response Object\n\tcurrEvent.gesture = {};\n\n\tif (currEvent && currEvent.touches && currEvent.touches.length > 0) {\n\t\tcurrEvent.gesture.touches = currEvent.touches;\n\t}\n\telse {\n\t\tcurrEvent.gesture.touches = [currEvent];\n\t}\n\n\tcurrEvent.gesture.screenX = currEvent.gesture.touches[0].screenX;\n\tcurrEvent.gesture.screenY = currEvent.gesture.touches[0].screenY;\n\n\tif (!('screenX' in currEvent)) {\n\t\tcurrEvent.screenX = currEvent.gesture.screenX;\n\t}\n\tif (!('screenY' in currEvent)) {\n\t\tcurrEvent.screenY = currEvent.gesture.screenY;\n\t}\n\n\t// If the second parameter isn't defined then we're unable to define getures\n\t// But if it is then whoop, lets go.\n\tif (prevEvent) {\n\n\t\tcurrEvent.gesture.deltaTime = (currEvent.timeStamp - prevEvent.timeStamp);\n\n\t\tconst dx = currEvent.gesture.deltaX = currEvent.gesture.screenX - prevEvent.gesture.screenX;\n\t\tconst dy = currEvent.gesture.deltaY = currEvent.gesture.screenY - prevEvent.gesture.screenY;\n\n\t\t// Which is the best direction for the gesture?\n\t\tif (Math.abs(dy) > Math.abs(dx)) {\n\t\t\tcurrEvent.gesture.direction = (dy > 0 ? 'up' : 'down');\n\t\t}\n\t\telse {\n\t\t\tcurrEvent.gesture.direction = (dx > 0 ? 'right' : 'left');\n\t\t}\n\n\t\t// Distance\n\t\tcurrEvent.gesture.distance = Math.sqrt((dx * dx) + (dy * dy));\n\n\t\t// Velocity\n\t\tcurrEvent.gesture.velocity = currEvent.gesture.distance / currEvent.gesture.deltaTime;\n\t}\n}\n\nmodule.exports.gesture = gesture;\n\nfunction voidEvent(event) {\n\tconst type = event.pointerType || event.type;\n\treturn (type.match(/mouse/i) && (event.which || event.buttons) !== 1);\n}\n","// Create a queuing function\n// Queues items in an Array like function until a handler has been defined\n// Then each item will be processed against the handler.\n// Useful for creating Global Asynchronous Queues, as can be retro fitted to existing arrays.\n\nmodule.exports = class Queue {\n\n\tconstructor (arr, handler) {\n\t\tthis.items = (Array.isArray(arr) ? arr : []);\n\t\tthis.handler = handler;\n\t}\n\n\t// Mimic the Array.push function\n\tpush (...args) {\n\n\t\t// Append items to the internal array.\n\t\targs.forEach(item => this.items.push(item));\n\n\t\t// Trigger the custom handler\n\t\tif (this._handler) {\n\t\t\targs.forEach(item => this._handler(item));\n\t\t}\n\t}\n\n\t// Mimic the length\n\tget length () {\n\t\treturn this.items.length;\n\t}\n\tset length (value) {\n\t\treturn this.items.length = value;\n\t}\n\n\t// Set the item handler\n\tget handler () {\n\t\treturn this._handler;\n\t}\n\n\tset handler (callback) {\n\n\t\tthis._handler = callback;\n\n\t\tif (this._handler) {\n\t\t\tthis.items.forEach(item => this._handler(item));\n\t\t}\n\t}\n};\n","module.exports = (test, root) => root && test instanceof root;\n","// requestAnimationFrame polyfill\nwindow.requestAnimationFrame =\n\twindow.requestAnimationFrame ||\n\twindow.webkitRequestAnimationFrame ||\n\twindow.mozRequestAnimationFrame ||\n\twindow.oRequestAnimationFrame ||\n\twindow.msRequestAnimationFrame ||\n\t(callback => setTimeout(callback, 1000 / 60));\n\nmodule.exports = window.requestAnimationFrame.bind(window);\n","// Background\n// Exposes the basic properties/methods of a controllable background\n\nimport Queue from 'tricks/object/Queue';\n\n// Extract the window.background items\nconst queue = window.background = new Queue(window.background);\n\nfunction queueHandler(callback) {\n\t// Each item in the queue should be a function\n\tcallback(Background);\n}\n\nexport default class Background {\n\n\tstatic add(stage) {\n\t\t// Store the\n\t\tBackground.stages.push(stage);\n\n\t\t// Trigger ready if it has not already been set\n\t\tif (Background.stages.length === 1) {\n\t\t\t// Initiate the queue\n\t\t\tqueue.handler = queueHandler;\n\t\t}\n\t}\n\n\t// Create a new instance of a stage\n\tstatic init(target) {\n\t\t// Get the default stage which has been registered with this class\n\t\tconst stage = Background.stages[0];\n\n\t\t// Return instance\n\t\tif (stage) {\n\t\t\treturn new stage(target);\n\t\t}\n\t}\n}\n\nBackground.stages = [];\n","// Setup\n// This constructs the canvas object\n\n// Includes\nimport 'tricks/support/requestAnimationFrame';\nimport createEvent from 'tricks/events/createEvent';\nimport createDummyEvent from 'tricks/events/createDummyEvent';\nimport on from 'tricks/events/on';\nimport swipe from 'tricks/events/swipe';\n\n// Constants\nconst BACKGROUND_HASH = 'background';\nconst UserEvents = ['click', 'mousedown', 'mouseup', 'mouseover', 'mousemove', 'mouseout', 'frame', 'resize', 'keydown'];\nconst TouchEvents = ['touchmove', 'touchstart', 'touchend'];\n\nconst EVENT_SEPARATOR = /[\\s\\,]+/;\n\nexport default class Canvas {\n\n\t// Construct the Canvas Element\n\t// @param canvas should be an root element container for this imagery.\n\tconstructor(canvas) {\n\n\t\tlet parent;\n\n\t\t// events\n\t\tthis.events = {};\n\n\t\t// browser check\n\t\tif (!('getContext' in document.createElement('canvas'))) {\n\t\t\t// browser doesn't support canvas\n\t\t\treturn;\n\t\t}\n\n\t\tif (!(canvas && canvas instanceof HTMLCanvasElement)) {\n\n\t\t\t// Set the parent\n\t\t\tparent = canvas;\n\n\t\t\t// Create the canvas layer\n\t\t\tcanvas = document.createElement('canvas');\n\t\t\tcanvas.style.backgroundColor = 'white';\n\n\t\t\t// Not a parent\n\t\t\tif (!parent) {\n\t\t\t\t// Append to the body\n\t\t\t\tparent = document.body;\n\t\t\t\tcanvas.style.cssText = 'position:fixed;z-index:-1;top:0;left:0;';\n\t\t\t\tcanvas.setAttribute('tabindex', 0);\n\n\t\t\t\tdocument.documentElement.style.cssText = 'min-height:100%;';\n\t\t\t\tdocument.body.style.cssText = 'min-height:100%;';\n\n\t\t\t\t// Bind window resize events\n\t\t\t\twindow.addEventListener('resize', this.resize.bind(this));\n\t\t\t}\n\n\t\t\t// Append this element\n\t\t\tparent.insertBefore(canvas, parent.firstElementChild);\n\n\t\t\tthis.target = canvas;\n\n\t\t\tthis.resize();\n\t\t}\n\t\telse {\n\t\t\tthis.target = canvas;\n\t\t\tparent = canvas.parentNode;\n\t\t}\n\n\t\tthis.ctx = canvas.getContext('2d');\n\n\t\t// Set initial save point\n\t\tthis.ctx.save();\n\n\t\t// Initiate the time\n\t\tthis._time = 0;\n\t\tthis._fps = 0;\n\n\t\t// Initiate the draw\n\t\tthis.draw();\n\n\t\t// Bind events\n\t\ton(this.target, UserEvents.toString(), this.dispatchEvent.bind(this), {passive: true});\n\n\t\t// Format Touch events\n\t\ton(this.target, TouchEvents.toString(), this.dispatchTouchEvent.bind(this), {passive: true});\n\n\t\t// In IE user-events aren't propagated to elements which have negative z-Index's\n\t\t// Listen to events on the document element and propagate those accordingly\n\t\tif (parent === document.body && canvas.style.getPropertyValue('z-index') === '-1') {\n\t\t\t// Bind events\n\t\t\ton(document, UserEvents.toString(), this.dispatchEvent.bind(this), {passive: true});\n\n\t\t\t// Format Touch events\n\t\t\ton(document, TouchEvents.toString(), this.dispatchTouchEvent.bind(this), {passive: true});\n\t\t}\n\n\t\t// Listen to hashChange events\n\t\t{\n\t\t\t// HASH CHANGE DEPTH\n\t\t\tconst style = this.target.style;\n\t\t\tconst initialZ = style.getPropertyValue('z-index');\n\t\t\t// Listen to changes to the background hash to bring the canvas element to the front\n\t\t\twindow.addEventListener('hashchange', hashchange.bind(style, initialZ));\n\n\t\t\thashchange.call(style, initialZ);\n\t\t}\n\n\t\t// Is there a swipe method handler\n\t\tif (this.swipe) {\n\t\t\t// Bind the swipe event handler to the event\n\t\t\tswipe(this.target, this.swipe.bind(this));\n\t\t}\n\t}\n\n\t// ensure its keeping up.\n\tget width() {\n\t\treturn this.target.width;\n\t}\n\tset width(value) {\n\t\tthis.target.width = value;\n\t\treturn value;\n\t}\n\n\tget height() {\n\t\treturn this.target.height;\n\t}\n\tset height(value) {\n\t\tthis.target.height = value;\n\t\treturn value;\n\t}\n\tget fps() {\n\t\treturn this._fps;\n\t}\n\tset fps(value) {\n\n\t\tthis._fps = value;\n\n\t\tconst now = (new Date()).getTime();\n\n\t\tif ((now - this._time) > 1000) {\n\t\t\t// console.log('fps: %d', this._fps);\n\t\t\tthis._time = now;\n\t\t\tthis._fps = 0;\n\t\t}\n\t}\n\n\n\tresize() {\n\t\tconst parent = (this.target.parentNode === document.body) ? document.documentElement : this.target.parentNode;\n\t\tconst height = parent.clientHeight;\n\t\tconst width = parent.clientWidth;\n\t\tlet changed = false;\n\n\t\tif (this.width !== width) {\n\t\t\tchanged = true;\n\t\t\tthis.width = width;\n\t\t}\n\t\tif (this.height !== height) {\n\t\t\tchanged = true;\n\t\t\tthis.height = height;\n\t\t}\n\n\t\tif (changed) {\n\t\t\tthis.target.dispatchEvent(createEvent('resize'));\n\t\t}\n\t}\n\n\tclear() {\n\t\tthis.ctx.clearRect(0, 0, this.target.width, this.target.height);\n\t}\n\n\t// Bring the content of the canvas to the front\n\tbringToFront() {\n\n\t\t// Update the window.location with the hash #background\n\t\twindow.location.hash = BACKGROUND_HASH;\n\t}\n\n\t// Trigger the draw function\n\tdraw() {\n\n\t\t// Increment the number of frames\n\t\tthis.fps++;\n\n\t\t// Call the frame function in the context of the frame to draw\n\t\tthis.target.dispatchEvent(createEvent('frame'));\n\n\t\t// Request another frame\n\t\trequestAnimationFrame(this.draw.bind(this));\n\t}\n\n\t// The user has clicked an item on the page\n\taddEventListener(eventnames, handler) {\n\n\t\teventnames.split(EVENT_SEPARATOR).forEach(eventname => {\n\t\t\t// Add to the events list\n\t\t\tif (!(eventname in this.events)) {\n\t\t\t\tthis.events[eventname] = [];\n\t\t\t}\n\n\t\t\tthis.events[eventname].push(handler);\n\t\t});\n\t}\n\n\t// Dispatch\n\tdispatchEvent(e) {\n\n\t\tif (e.type in this.events) {\n\n\t\t\tconst target = e.currentTarget;\n\n\t\t\t// This was triggered using event delegation, aka in the background\n\t\t\tif (target === document) {\n\n\t\t\t\te = createDummyEvent({\n\t\t\t\t\ttype: e.type,\n\t\t\t\t\ttarget: this.target,\n\t\t\t\t\toffsetX: e.pageX || e.offsetX,\n\t\t\t\t\toffsetY: e.pageY || e.offsetY\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tthis.events[e.type].forEach(handler => handler(e));\n\t\t\te.stopPropagation();\n\t\t}\n\t}\n\n\t// Dispatch\n\tdispatchTouchEvent(e) {\n\t\t// If this was a touch event\n\t\t// Determine the offset to the canvas element relative to the item being clicked\n\t\tconst touch = (e.touches || e.changedTouches)[0];\n\t\tif (touch) {\n\t\t\te.offsetX = Math.abs(touch.pageX || touch.screenX);\n\t\t\te.offsetY = Math.abs(touch.pageY || touch.screenY);\n\t\t}\n\n\t\tthis.dispatchEvent(e);\n\t}\n}\n\n\nfunction hashchange(z) {\n\n\tconst zIndex = 'z-index';\n\n\tif (window.location.hash === `#${ BACKGROUND_HASH}`) {\n\t\tz = 10000;\n\t}\n\n\tif (z !== undefined) {\n\t\t// Set the z-Index\n\t\tthis.setProperty(zIndex, z);\n\t}\n\telse {\n\t\t// Remove the z-Index\n\t\tthis.removeProperty(zIndex);\n\t}\n}\n","// Collection\n\nimport on from 'tricks/events/on';\nconst UserEvents = ['click', 'mousedown', 'mouseup', 'mouseover', 'mousemove', 'mouseout', 'touchmove', 'touchstart', 'touchend', 'frame'];\n\nexport default class Collection {\n\n\tconstructor(target) {\n\t\t// Create an empty children\n\t\tthis.children = [];\n\n\t\t// Events\n\t\tthis.events = [];\n\n\t\t// setup the canvas element\n\t\tthis.init(target);\n\t}\n\n\t// listen to canvas events\n\tinit (target) {\n\n\t\t// Define the canvas object as the target for the collection\n\t\tthis.target = target;\n\n\t\t// Define the CTX\n\t\tthis.ctx = target.getContext('2d');\n\n\t\t// listen to user interactive events and trigger those on items\n\t\ton(target, UserEvents.toString(), this._findAndDispatch.bind(this), {passive: true});\n\n\t}\n\n\tpush(item) {\n\t\titem.dirty = true;\n\n\t\t// Is this item already in the collection?\n\t\tif (this.children.indexOf(item) === -1) {\n\t\t\tif (item.setup) {\n\t\t\t\titem.setup(this);\n\t\t\t}\n\n\t\t\t// item.addEventListener('dirty', this.prepareChild.bind(this, item));\n\t\t\tthis.children.push(item);\n\t\t}\n\t}\n\n\tfindIndex(fn) {\n\t\treturn this.children.findIndex(fn);\n\t}\n\n\tfind(fn) {\n\t\treturn this.children.find(fn);\n\t}\n\n\tget length () {\n\t\treturn this.children.length;\n\t}\n\tset length (v) {\n\t\treturn this.children.length = v;\n\t}\n\n\n\t// Touch\n\t// Mark items and objects in the same space to be redrawn\n\tprepare() {\n\t\tthis.children.forEach(item => {\n\t\t\tif (item.dirty === true)\n\t\t\t\tthis.prepareChild(item);\n\t\t});\n\t}\n\n\t// Clean Item\n\tprepareChild(item) {\n\n\t\tconst ctx = this.ctx;\n\n\t\tif (item.dirty === 'pending') {\n\t\t\treturn;\n\t\t}\n\n\t\t// Mark this item as dirty\n\t\titem.dirty = 'pending';\n\n\t\t// Remove from Canvas\n\t\tctx.clearRect(item.x, item.y, item.w, item.h);\n\n\t\t// If the items old position is different\n\t\tif (item.previous && displaced(item.previous, item)) {\n\t\t\tctx.clearRect(item.previous.x, item.previous.y, item.previous.w, item.previous.h);\n\t\t}\n\n\t\t// Loop though objects and redraw those that exist within the position\n\t\tthis.children.forEach(this._prepareSiblings.bind(this, item));\n\t}\n\n\t_prepareSiblings(item, sibling) {\n\n\t\t// Does this Object overlap with the focused object?\n\t\tif (!sibling.dirty && sibling.visible !== false && (intersect(sibling, item) || (item.past ? intersect(sibling, item.past) : false))) {\n\t\t\t// Nested clean\n\t\t\tthis.prepareChild(sibling);\n\t\t}\n\t}\n\n\tsort() {\n\t\t// Sort items by z-index\n\t\tthis.children.sort((a, b) => {\n\t\t\ta = a.zIndex || 0;\n\t\t\tb = b.zIndex || 0;\n\t\t\treturn +(a > b) || -(a < b);\n\t\t});\n\t}\n\n\t// Trigger the draw function\n\tdraw() {\n\n\t\tconst ctx = this.ctx;\n\n\t\t// Find items that have changed\n\t\t// Remove background\n\t\tthis.children.forEach(item => {\n\n\t\t\tif (item.frame) {\n\t\t\t\titem.frame(ctx);\n\t\t\t}\n\n\t\t\tif (item.dirty && item.visible !== false) {\n\t\t\t\titem.draw(ctx);\n\t\t\t}\n\n\t\t\titem.dirty = false;\n\t\t});\n\t}\n\n\telementFromPoint(x, y) {\n\n\t\tlet target;\n\n\t\t// Find the canvas item which this targets?\n\t\tconst obj = {\n\t\t\tx,\n\t\t\ty,\n\t\t\tw: 1,\n\t\t\th: 1\n\t\t};\n\n\t\tthis.children.forEach(item => {\n\n\t\t\tif (item.visible === false || !item.w || !item.h || item.pointerEvents === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Is this a target?\n\t\t\tif (intersect(obj, item)) {\n\t\t\t\t// Define this as a target\n\t\t\t\ttarget = item;\n\t\t\t}\n\t\t});\n\n\t\treturn target;\n\t}\n\n\t// The user has clicked an item on the page\n\taddEventListener(eventname, handler) {\n\n\t\t// Add to the events list\n\t\tif (!(eventname in this.events)) {\n\t\t\tthis.events[eventname] = [];\n\t\t}\n\n\t\tthis.events[eventname].push(handler);\n\t}\n\n\t// Dispatch\n\tdispatchEvent(e) {\n\t\tif (e.type in this.events)\n\t\t\tthis.events[e.type].forEach(handler => handler(e));\n\t}\n\n\t// Find and _dispatch\n\t_findAndDispatch(e) {\n\t\t// If this is not a pointerEvent lets just pass it through.\n\t\tif ((typeof MouseEvent !== 'undefined' && e instanceof MouseEvent) ||\n\t\t\t(typeof TouchEvent !== 'undefined' && e instanceof TouchEvent)) {\n\n\t\t\t// Find the canvas item which this targets?\n\t\t\tconst obj = {\n\t\t\t\tx: e.offsetX,\n\t\t\t\ty: e.offsetY,\n\t\t\t\tw: 1,\n\t\t\t\th: 1\n\t\t\t};\n\n\t\t\tthis.children.forEach(item => {\n\n\t\t\t\tif (!item.visible || !item.w || !item.h || !item.pointerEvents) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Intersects?\n\t\t\t\tintersect(obj, item) && item.dispatchEvent(e);\n\t\t\t});\n\t\t}\n\t}\n}\n\n\n// Intersect\n// Given two objects with, x,y,w,h properties\n// Do their rectangular dimensions intersect?\n// return Boolean true false.\nfunction intersect(a, b) {\n\treturn !(a.x > (b.x + b.w) ||\n\t(a.x + a.w) < b.x ||\n\ta.y > (b.y + b.h) ||\n\t(a.y + a.h) < b.y);\n}\n\nfunction displaced(a, b) {\n\treturn (a.x !== b.x ||\n\ta.y !== b.y ||\n\ta.w !== b.w ||\n\ta.h !== b.h);\n}\n","//\n// Rectangle\n//\n\nimport Shape from './shape';\n\nexport default class Rect extends Shape {\n\n\tconstructor(...args) {\n\t\tsuper(...args);\n\t}\n\n\tget fillStyle() {\n\t\treturn this._fillStyle;\n\t}\n\tset fillStyle(v) {\n\t\tif (this._fillStyle !== v) {\n\t\t\tthis.dirty = true;\n\t\t\tthis._fillStyle = v;\n\t\t}\n\t}\n\n\tget type() {\n\t\treturn 'rect';\n\t}\n\n\tdraw(ctx) {\n\n\t\tctx.save();\n\n\t\tif (this.dx || this.dy) {\n\t\t\tctx.translate(this.dx, this.dy);\n\t\t}\n\t\tctx.fillStyle = this.fillStyle;\n\t\tctx.fillRect(this.x, this.y, this.w, this.h);\n\t\tctx.restore();\n\t}\n}\n","// Shape\n// CanvasShapes\n// The parent object defining a basic shape, x,y,w,h, for starters.\n// And basic operatings you might like to include on a shape\nimport createEvent from 'tricks/events/createEvent';\n\nexport default class Shape {\n\n\tconstructor (...args) {\n\n\t\t// initieate  events\n\t\tthis.events = [];\n\n\t\t// Set previous\n\t\tthis.previous = {};\n\n\t\tif (args.length) {\n\t\t\t// Store the values\n\t\t\tthis.position(...args);\n\t\t}\n\t}\n\n//\tSet property listeners\n\tget x() {\n\t\treturn this._x;\n\t}\n\tset x(x) {\n\t\tthis.positionObj({x});\n\t}\n\n\tget y() {\n\t\treturn this._y;\n\t}\n\tset y(y) {\n\t\tthis.positionObj({y});\n\t}\n\n\tget w() {\n\t\treturn this._w;\n\t}\n\tset w(w) {\n\t\tthis.positionObj({w});\n\t}\n\n\tget h() {\n\t\treturn this._h;\n\t}\n\tset h(h) {\n\t\tthis.positionObj({h});\n\t}\n\n\tget dx() {\n\t\treturn this._dx;\n\t}\n\tset dx(v) {\n\t\tif (this._dx !== v) {\n\t\t\tthis.dirty = true; this._dx = v;\n\t\t}\n\t}\n\n\tget dy() {\n\t\treturn this._dy;\n\t}\n\tset dy(v) {\n\t\tif (this._dy !== v) {\n\t\t\tthis.dirty = true; this._dy = v;\n\t\t}\n\t}\n\n\tget visible() {\n\t\treturn (this._visible === undefined ? true : this._visible);\n\t}\n\tset visible(v) {\n\t\tif (this._visible !== v) {\n\t\t\tthis.dirty = true; this._visible = v;\n\t\t}\n\t}\n\n\tget opacity() {\n\t\treturn (this._opacity === undefined ? 1 : this._opacity);\n\t}\n\tset opacity(v) {\n\t\tif (this._opacity !== v) {\n\t\t\tthis.dirty = true; this._opacity = v;\n\t\t}\n\t}\n\n\tset dirty (v) {\n\t\t// Has this just been made dirty?\n\t\tif (!this._dirty && v) {\n\t\t\t// Mark as dirty\n\t\t\tthis._dirty = v;\n\n\t\t\t// Trigger a canvas clean\n\t\t\tthis.dispatchEvent(createEvent('dirty'));\n\t\t}\n\t\telse if (!v) {\n\t\t\t// reset\n\t\t\tthis._dirty = v;\n\n\t\t\t// Store the previous values\n\t\t\tthis.previous = {\n\t\t\t\tx: this._x,\n\t\t\t\ty: this._y,\n\t\t\t\tw: this._w,\n\t\t\t\th: this._h,\n\t\t\t};\n\t\t}\n\t}\n\tget dirty () {\n\t\treturn this._dirty;\n\t}\n\n\t// Let events bubble up\n\tget pointerEvents () {\n\t\treturn (this._pointerEvents === undefined ? 1 : this._pointerEvents);\n\t}\n\tset pointerEvents (v) {\n\t\tthis._pointerEvents = v;\n\t}\n\n\t// Mark the shape as to be removed from the collection\n\tremove() {\n\t\tthis.dirty = true;\n\t\tthis.visible = false;\n\t}\n\n\tposition(x = 0, y = 0, w = 0, h = 0) {\n\n\t\t// Assign, rectangle shape\n\t\t// Have a backup footprint\n\t\tthis.positionObj({x, y, w, h});\n\t}\n\n\tpositionObj(coords) {\n\t\tfor (const coord in coords) {\n\t\t\tconst value = coords[coord];\n\t\t\tconst current = this[`_${coord}`];\n\t\t\tif (current !== value) {\n\t\t\t\tthis.dirty = true;\n\t\t\t\tthis[`_${coord}`] = value;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Placeholder function for drawing to canvas\n\tframe() {}\n\tdraw() {}\n\tsetup() {}\n\n\t// Events\n\t// Assign Events to be fired when the user clicks this object\n\t// Awesome\n\taddEventListener(eventName, callback) {\n\t\tif (!(eventName in this.events)) {\n\t\t\tthis.events[eventName] = [];\n\t\t}\n\t\tthis.events[eventName].push(callback);\n\t}\n\n\tdispatchEvent(e) {\n\t\tif (!(e.type in this.events)) {\n\t\t\treturn;\n\t\t}\n\t\tthis.events[e.type].forEach(fn => fn(e));\n\t}\n\n\t// Assign getters and setters to default properties\n\t_watchProperty(propName) {\n\t\tObject.defineProperty(this, propName, {\n\t\t\tget: this._getter.bind(this, propName),\n\t\t\tset: this._setter.bind(this, propName)\n\t\t});\n\t}\n\n\t_getter(propName) {\n\t\treturn this[`_${ propName}`];\n\t}\n\n\t_setter(propName, v) {\n\t\tif (this[`_${ propName}`] !== v) {\n\t\t\tthis.dirty = true;\n\t\t\tthis[`_${ propName}`] = v;\n\t\t}\n\t}\n}\n","// text\n// TextObject, defines a shape object which contains text.\n\nimport Shape from './shape';\n\nexport default class Text extends Shape {\n\n\t// Initiate a new shape object.\n\tconstructor (text) {\n\t\t// initiate inheritance\n\t\tsuper();\n\n\t\t// Watch the following properties for changes\n\t\t['text', 'shadowBlur', 'shadowColor', 'fillStyle', 'strokeStyle', 'textAlign', 'textBaseline', 'lineWidth'].forEach(this._watchProperty.bind(this));\n\n\t\t// Define text\n\t\tthis.text = text || '';\n\n\t\tthis.shadowColor = 'black';\n\t\tthis.fillStyle = 'black';\n\t\tthis.strokeStyle = 'white';\n\t\tthis.textAlign = 'left';\n\t\tthis.textBaseline = 'top';\n\t\tthis.lineWidth = 0;\n\t\tthis.align = 'left top';\n\t\tthis.fontSize = 30;\n\t}\n\n\t// Define the text and the alignment of the object\n\tcalc (canvas) {\n\n\t\t// Define text\n\t\t[this.textAlign, this.textBaseline] = this.align.split(' ');\n\n\t\tconst ctx = canvas.ctx;\n\t\tlet fontSize = this.fontSize;\n\n\t\t// Split text by line breaks\n\t\tthis.lines = this.text.toString().split('\\n');\n\n\t\t// Which is the longest line?\n\t\tlet _width = 0;\n\t\tlet default_text = this.lines[0];\n\n\t\tthis.lines.forEach(line => {\n\t\t\tconst _w = ctx.measureText(line).width;\n\t\t\tif (_w > _width) {\n\t\t\t\t_width = _w;\n\t\t\t\tdefault_text = line;\n\t\t\t}\n\t\t});\n\n\t\t// Find the width and height of the item\n\t\t// Using the canvas context\n\t\tctx.save();\n\n\t\tctx.shadowColor = 'black';\n\t\tctx.fillStyle = 'black';\n\t\tctx.strokeStyle = 'rgba(255,255,255,0.5)';\n\t\tctx.font = `bold ${ fontSize }px Arial`;\n\n\t\twhile (ctx.measureText(default_text).width > canvas.width) {\n\t\t\tfontSize *= 0.9;\n\t\t\tfontSize = Math.round(fontSize);\n\t\t\tctx.font = `bold ${ fontSize }px Arial`;\n\t\t}\n\n\t\tthis.shadowBlur = ctx.shadowBlur = Math.round(fontSize / 10);\n\t\tthis.fontSize = fontSize;\n\t\tthis.font = ctx.font;\n\n\t\tthis.w = ctx.measureText(default_text).width + (this.shadowBlur * 2);\n\t\tthis.h = (fontSize + (this.shadowBlur * 2)) * this.lines.length;\n\n\t\tctx.restore();\n\n\t\t// Store style attributes\n\t\t// Store the new attributes of the text item\n\t\tthis.lineWidth = Math.floor(fontSize / 60);\n\n\n\t\t// HEIGHT and WIDTH\n\t\tswitch (this.textAlign) {\n\t\t\tcase 'center':\n\t\t\tcase 'middle':\n\t\t\t\tthis.textAlign = 'center';\n\t\t\t\tthis.x = (canvas.width / 2) - (this.w / 2);\n\t\t\t\tbreak;\n\t\t\tcase 'left':\n\t\t\t\tthis.x = 0;\n\t\t\t\tbreak;\n\t\t\tcase 'right':\n\t\t\t\tthis.x = canvas.width - this.w;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tswitch (this.textBaseline) {\n\t\t\tcase 'center':\n\t\t\tcase 'middle':\n\t\t\t\tthis.textBaseline = 'middle';\n\t\t\t\tthis.y = (canvas.height / 2) - (this.h / 2);\n\t\t\t\tbreak;\n\t\t\tcase 'top':\n\t\t\t\tthis.y = 0;\n\t\t\t\tbreak;\n\t\t\tcase 'bottom':\n\t\t\t\tthis.y = canvas.height - this.h;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tthis.textAlign = 'left';\n\t\tthis.textBaseline = 'top';\n\n\t\tctx.restore();\n\t}\n\n\t// Draw\n\tdraw (ctx) {\n\n\t\tctx.save();\n\n\t\tctx.globalAlpha = this.opacity;\n\n\t\tctx.shadowColor = this.shadowColor;\n\t\tif (this.shadowBlur) {\n\t\t\tctx.shadowBlur = this.shadowBlur;\n\t\t}\n\t\tctx.fillStyle = this.fillStyle;\n\t\tctx.strokeStyle = this.strokeStyle;\n\t\tctx.font = this.font;\n\n\t\tctx.textAlign = this.textAlign;\n\t\tctx.textBaseline = this.textBaseline;\n\t\tctx.lineWidth = this.lineWidth;\n\n\t\tif (this.lineWidth) {\n\t\t\tctx.lineWidth = this.lineWidth;\n\t\t}\n\n\t\tthis.lines = this.text.toString().split('\\n');\n\n\t\tconst len = this.lines.length;\n\n\t\tthis.lines.forEach((item, index) => {\n\t\t\tconst y = this.y + (this.h ? (index * (this.h / len)) : 0);\n\n\t\t\tctx.fillText(item, this.x, y);\n\t\t\tif (this.strokeStyle) {\n\t\t\t\tctx.strokeText(item, this.x, y);\n\t\t\t}\n\t\t});\n\n\t\tctx.restore();\n\t}\n}\n","// Tetris, Canvas animation\n// Copyright Andrew Dodson, July 2017\n\n// Get Canvas\nimport Canvas from './classes/canvas';\nimport Collection from './classes/collection';\nimport Text from './classes/text';\nimport Shape from './classes/shape';\nimport Rect from './classes/rect';\nimport Background from './classes/background';\n\n// Create a new tile\n// Arguments handled by parent\nclass Piece extends Shape {\n\n\tconstructor({gx, gy, tw, th, structure, color}) {\n\n\t\tconst x = tw * gx;\n\t\tconst y = th * gy;\n\t\tconst w = tw * structure[0].length;\n\t\tconst h = th * structure.length;\n\t\tsuper(x, y, w, h);\n\n\t\tthis.tw = tw;\n\t\tthis.th = th;\n\t\tthis.gx = gx;\n\t\tthis.gy = gy;\n\t\tthis.zIndex = 0;\n\t\tthis.color = color;\n\t\tthis.structure = structure;\n\t}\n\n\t// Rotate this item\n\trotate() {\n\t\t// Rotate piece\n\t\tconst a = [];\n\t\tconst rowCount = this.structure.length;\n\t\tthis.structure.forEach((row, rowIndex) => {\n\t\t\trow.forEach((value, colIndex) => {\n\t\t\t\t// Init array\n\t\t\t\tlet row = a[colIndex];\n\t\t\t\tif (!row) {\n\t\t\t\t\trow = [];\n\t\t\t\t\ta[colIndex] = row;\n\t\t\t\t}\n\n\t\t\t\t// The xIndex becomes the row index\n\t\t\t\ta[colIndex][rowCount - rowIndex - 1] = value;\n\t\t\t});\n\t\t});\n\n\t\tthis.structure = a;\n\t}\n\n\tpoints() {\n\t\tconst a = [];\n\t\tthis.structure.forEach((row, y) => {\n\t\t\t// Find the blocks in the row\n\t\t\trow.forEach((block, x) => {\n\t\t\t\tif (block) {\n\t\t\t\t\ta.push([x, y]);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t\treturn a;\n\t}\n\n\t// Each function passed into the collection must have a draw function\n\tdraw(ctx) {\n\t\tctx.fillStyle = this.color;\n\n\t\t// Draw\n\t\tthis.structure.forEach((row, yIndex) => {\n\t\t\tconst y = (yIndex * this.th);\n\t\t\trow.forEach((tile, xIndex) => {\n\t\t\t\tif (tile) {\n\t\t\t\t\tconst x = xIndex * this.tw;\n\t\t\t\t\tctx.fillRect(this.x + x, this.y + y, this.tw, this.th);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n}\n\n// Define the shapes which go into making the game...\nconst pieces = [\n\t{\n\t\tcolor: 'red',\n\t\tname: 'square',\n\t\tstructure: [\n\t\t\t[1, 1],\n\t\t\t[1, 1]\n\t\t]\n\t},\n\t{\n\t\tcolor: 'green',\n\t\tname: 'left-l',\n\t\tstructure: [\n\t\t\t[0, 1, 0],\n\t\t\t[0, 1, 0],\n\t\t\t[0, 1, 1]\n\t\t]\n\t},\n\t{\n\t\tcolor: 'green',\n\t\tname: 'right-l',\n\t\tstructure: [\n\t\t\t[0, 1, 0],\n\t\t\t[0, 1, 0],\n\t\t\t[1, 1, 0]\n\t\t]\n\t},\n\t{\n\t\tcolor: 'orange',\n\t\tname: 'zig',\n\t\tstructure: [\n\t\t\t[1, 0, 0],\n\t\t\t[1, 1, 0],\n\t\t\t[0, 1, 0]\n\t\t]\n\t},\n\t{\n\t\tcolor: 'blue',\n\t\tname: 'zag',\n\t\tstructure: [\n\t\t\t[0, 1, 0],\n\t\t\t[1, 1, 0],\n\t\t\t[1, 0, 0]\n\t\t]\n\t},\n\t{\n\t\tcolor: 'yellow',\n\t\tname: 'line',\n\t\tstructure: [\n\t\t\t[0, 1, 0, 0],\n\t\t\t[0, 1, 0, 0],\n\t\t\t[0, 1, 0, 0],\n\t\t\t[0, 1, 0, 0]\n\t\t]\n\t},\n\t{\n\t\tcolor: 'purple',\n\t\tname: 'middle',\n\t\tstructure: [\n\t\t\t[0, 1, 0],\n\t\t\t[0, 1, 1],\n\t\t\t[0, 1, 0]\n\t\t]\n\t}\n];\n\nclass Stage extends Canvas {\n\n\tconstructor(target) {\n\n\t\t// Initiate the canvas in the base\n\t\tsuper(target);\n\n\t\t// Collection\n\t\t// Define the canvas start element\n\t\tthis.collection = new Collection(this.target);\n\n\t\t// Add listeners to the canvas Element\n\t\tthis.addEventListener('frame', this.frame.bind(this));\n\n\t\t// Add listeners to the canvas Element\n\t\tthis.addEventListener('resize', this.reset.bind(this));\n\n\t\t// Show text\n\t\tthis.options = {\n\t\t\tcontrols: true\n\t\t};\n\n\t\t// Board\n\t\tthis.board = [];\n\n\t\tconst credits = new Text();\n\t\tcredits.text = 'Game Over';\n\t\tcredits.zIndex = 1;\n\t\tcredits.fontSize = 150;\n\t\tcredits.align = 'center center';\n\t\tcredits.addEventListener('click', this.reset.bind(this));\n\t\tcredits.visible = false;\n\t\tthis.credits = credits;\n\n\t\tconst score = new Text();\n\t\tscore.zIndex = 1;\n\t\tscore.text = 0;\n\t\tscore.align = 'right bottom';\n\t\tscore.pointerEvents = false;\n\t\tscore.fontSize = 40;\n\t\tthis.score = score;\n\n\t\t// Is this playing as a background image?\n\t\t// We want to display a button to enable playing in full screen.\n\t\tconst info = new Text();\n\t\tinfo.text = 'Click to start';\n\t\tinfo.zIndex = 1;\n\t\tinfo.align = 'center center';\n\t\tinfo.fontSize = 40;\n\t\tinfo.calc(this);\n\t\tthis.info = info;\n\n\n\t\t// // User has clicked an item on the canvas\n\t\t// // We'll use event delegation to tell us what the user has clicked.\n\t\t// this.addEventListener('click', this.click.bind(this));\n\n\t\t// User has clicked an item on the canvas\n\t\t// We'll use event delegation to tell us what the user has clicked.\n\t\tthis.addEventListener('keydown', this.keypress.bind(this));\n\n\t\t// This cadence\n\t\t// This sets the rate at which blocks move\n\t\t// And is roughly the [number] of milliseconcd it takes a block to move relative to it's own height.\n\t\tthis.cadence = 1000;\n\t\tthis.lastTick = 0;\n\t}\n\n\tsetup() {\n\t\tthis.reset();\n\t}\n\n\treset() {\n\n\t\t// Disable the ended state\n\t\tthis.ended = false;\n\n\t\t// Reset the currently playing piece\n\t\tthis.gamepiece = null;\n\n\t\t// Set the tilesize\n\t\tconst size = 50;\n\n\t\t// Remove everything\n\t\tthis.collection.length = 0;\n\n\t\t// Board\n\t\t// Break the board down into squares\n\t\t// At each square there can exist a reference to a piece\n\t\tthis.board.length = 0;\n\n\t\t{\n\t\t\t// Set number of tiles horizontally and vertically\n\t\t\tthis.nx = Math.floor(this.width / size);\n\t\t\tthis.ny = Math.floor(this.height / size);\n\n\t\t\t// Adjust the tile dimensions\n\t\t\tthis.tw = size + Math.floor((this.width % (this.nx * size)) / this.nx);\n\t\t\tthis.th = size + Math.floor((this.height % (this.ny * size)) / this.ny);\n\n\t\t\t// Create board matrix\n\t\t\tfor (let y = 0; y < this.ny; y++) {\n\t\t\t\tthis.board[y] = [];\n\t\t\t\tfor (let x = 0; x < this.nx; x++) {\n\t\t\t\t\tthis.board[y][x] = null;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Score\n\t\tthis.score.text = 0;\n\t\tthis.score.calc(this);\n\n\t\t// Add text items\n\t\tthis.collection.push(this.credits);\n\t\tthis.collection.push(this.info);\n\t\tthis.collection.push(this.score);\n\n\t\t// Sort the collection by z-index this ensures everything is drawn in the right order\n\t\tthis.collection.sort();\n\n\t\t// Clear the canvas\n\t\tthis.clear();\n\n\t\t// Show Controls\n\t\tthis.controls();\n\t}\n\n\tcontrols() {\n\t\t// Show Controls and information?\n\t\tthis.score.visible = true;\n\t\tthis.credits.visible = this.ended;\n\t\tthis.info.visible = this.ended;\n\t}\n\n\tframe() {\n\n\t\tif (!this.ended) {\n\n\t\t\tconst now = performance.now();\n\n\t\t\t// Mark that this has a difference in Y\n\t\t\t// This is used later to say whether a move to the left or right is possible.\n\t\t\tthis.diff = Math.min((now - this.lastTick) / this.cadence, 1) % 1;\n\n\t\t\t// Grab the current game piece and change it's vertical position\n\t\t\tif (this.gamepiece) {\n\n\t\t\t\t// Can this piece move down?\n\t\t\t\t// Find the matrix\n\t\t\t\tthis.gamepiece.y = parseInt((this.diff + this.gamepiece.gy) * this.th, 10);\n\t\t\t}\n\n\t\t\t// Is this a big move\n\t\t\tif (this.diff === 0) {\n\n\t\t\t\t// Update the lastTick\n\t\t\t\tthis.lastTick = now;\n\n\t\t\t\t// Trigger the tick\n\t\t\t\tthis.tick();\n\t\t\t}\n\t\t}\n\n\t\t// On every frame\n\t\t// Prepare dirty areas\n\t\tthis.collection.prepare();\n\n\t\t// Draw marked items\n\t\tthis.collection.draw();\n\t}\n\n\t// This is the game tick\n\t// The rate at which this is controlled varies depending on the game cadence\n\t// For instance this should initially be set to a fall rate of 1 block every second\n\t// When the game evolves the tick can be called more frequently\n\n\ttick() {\n\n\t\tif (this.gamepiece) {\n\t\t\t// Compare the position of the gamepiece and determine whether it's free to move down\n\t\t\t// - if not trigger the end and fix it in place\n\n\t\t\t// The gamepiece has a structure as does the board\n\t\t\t// Compare the position of the blocks which makes up the game piece\n\t\t\t// - in relation to the relative structure of the board\n\n\t\t\t// Update the gamepieces position...\n\t\t\tthis.move({y: 1});\n\t\t}\n\t\t// Else create a game shape and position it on the board\n\t\telse {\n\n\t\t\tconst {tw, th, nx} = this;\n\t\t\tconst piece = random(pieces);\n\t\t\tconst xlen = piece.structure[0].length;\n\t\t\tconst ylen = piece.structure.length;\n\n\t\t\t// Find the starting grid position of the piece\n\t\t\tconst gx = Math.ceil((nx - xlen) / 2);\n\t\t\tconst gy = -ylen;\n\n\t\t\t// Create the piece\n\t\t\tconst options = Object.assign({\n\t\t\t\tgx,\n\t\t\t\tgy,\n\t\t\t\ttw,\n\t\t\t\tth\n\t\t\t}, piece);\n\n\t\t\tthis.gamepiece = new Piece(options);\n\t\t\tthis.collection.push(this.gamepiece);\n\n\t\t\t// Draw marked items\n\t\t\tthis.collection.sort();\n\t\t}\n\t}\n\n\tclick() {\n\t\t// Find the gamepiece and trigger a rotation\n\t\tthis.rotate();\n\t}\n\n\trotate() {\n\t\t// Find the gamepiece and trigger a rotation\n\t\tif (this.gamepiece) {\n\t\t\tthis.gamepiece.rotate();\n\t\t}\n\t}\n\n\tcanMove(cords) {\n\t\t// Props of the gamepiece\n\t\tconst {gx, gy} = this.gamepiece;\n\t\tconst {x = 0, y = 0} = cords;\n\n\t\t// Can move?\n\t\tconst points = this.gamepiece.points();\n\n\t\t// Is there something at this point on the board?\n\t\treturn !points.find(([px, py]) => {\n\n\t\t\t// For a sideways move having already fallen half way also check an intermediate position\n\t\t\tif (this.diff && x && !y && this.point(px + x + gx, py + y + gy + 1)) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t// Check the position\n\t\t\treturn this.point(px + x + gx, py + y + gy);\n\t\t});\n\t}\n\n\tpoint(x, y) {\n\n\t\t// Allow items to fall from beyond the top\n\t\tif (y < 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\t// Out of bounds\n\t\tif ((y >= this.ny) || (x < 0 || x >= this.nx)) {\n\t\t\t// out of bounds\n\t\t\treturn 1;\n\t\t}\n\n\t\t// Whats there?\n\t\treturn this.board[y][x];\n\t}\n\n\t// Triggered when the gamepiece has reached the bottom\n\trestGamepiece() {\n\n\t\t// Set the gamepiece on the board\n\t\tconst points = this.gamepiece.points();\n\t\tconst {gx, gy} = this.gamepiece;\n\n\t\t// Is the item resting on/above the top?\n\t\tif (gy <= 0) {\n\t\t\tthis.end();\n\t\t\treturn;\n\t\t}\n\n\t\t// Mark the board as having filled in\n\t\tpoints.forEach(([px, py]) => {\n\t\t\tconst x = px + gx;\n\t\t\tconst y = py + gy;\n\n\t\t\t// Recreate the square\n\t\t\tconst tile = new Rect(this.tw * x, this.th * y, this.tw, this.th);\n\t\t\ttile.zIndex = 0;\n\t\t\ttile.fillStyle = this.gamepiece.color;\n\t\t\tthis.collection.push(tile);\n\n\t\t\tthis.board[y][x] = tile;\n\t\t});\n\n\t\t// Remove the gamepiece\n\t\tthis.gamepiece.remove();\n\n\t\t// Reset the swipe position\n\t\tthis.swipeStart = null;\n\n\t\t// Create a list of marked row indexes to remove from the board\n\t\tconst marked = [];\n\n\t\t// Completed rows?\n\t\tthis.board.forEach((row, index) => {\n\n\t\t\t// Ignore rows where every tile is not laid\n\t\t\tif (row.filter(a => a).length !== this.nx) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Detach all tile objects\n\t\t\trow.forEach(tile => tile.remove());\n\n\t\t\t// Add this row index to the marked list\n\t\t\tmarked.push(index);\n\t\t});\n\n\t\t// There are rows to remove\n\t\tif (marked.length) {\n\n\t\t\t// Remove items from the bottom\n\t\t\tmarked.reverse().forEach(index => this.board.splice(index, 1));\n\n\t\t\t// Add items to the top\n\t\t\tmarked.forEach(() => {\n\t\t\t\tthis.board.unshift([]);\n\t\t\t});\n\n\t\t\t// Loop through and reposition every tile\n\t\t\tthis.board.forEach((row, rowIndex) => {\n\t\t\t\trow.forEach((tile) => {\n\t\t\t\t\tif (tile) {\n\t\t\t\t\t\ttile.y = rowIndex * this.th;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\n\t\t\t// Add a score\n\t\t\tthis.score.text += marked.length;\n\t\t\tthis.score.calc(this);\n\t\t}\n\t}\n\n\tmove({x = 0, y = 0}) {\n\n\t\t// Move the game piece\n\t\tif (this.gamepiece && this.canMove({x, y})) {\n\n\t\t\tthis.gamepiece.gx += x;\n\t\t\tthis.gamepiece.x = (this.gamepiece.gx * this.tw);\n\n\t\t\tthis.gamepiece.gy += y;\n\t\t\tthis.gamepiece.y = (this.gamepiece.gy * this.th);\n\n\t\t\t// Free to continue falling?\n\t\t\tif (!this.canMove({y: 1})) {\n\t\t\t\t// Rest game[iece]\n\t\t\t\tthis.restGamepiece();\n\n\t\t\t\t// Remove it\n\t\t\t\tthis.gamepiece = null;\n\t\t\t}\n\n\t\t\t// This moved successfully\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tkeypress({key}) {\n\t\tswitch (key) {\n\t\t\tcase 'ArrowRight': {\n\t\t\t\tthis.move({x: 1});\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'ArrowLeft': {\n\t\t\t\tthis.move({x: -1});\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'ArrowDown': {\n\t\t\t\tthis.move({y: 1});\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'ArrowUp': {\n\t\t\t\tthis.rotate();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase ' ': {\n\t\t\t\tthis.rotate();\n\t\t\t}\n\t\t}\n\t}\n\n\tswipe(e) {\n\n\t\t// Set prevent default to stop any mouse events from also being called\n\t\tif ((typeof TouchEvent !== 'undefined') && e instanceof TouchEvent) {\n\t\t\t// Prevent the triggering of the mouse events\n\t\t\te.preventDefault();\n\t\t}\n\n\t\tconst type = e.gesture.type;\n\n\t\tif (type === 'start' && this.ended) {\n\t\t\tthis.reset();\n\t\t\treturn;\n\t\t}\n\n\t\t// Is this a release?\n\t\tif (type === 'release' || type === 'click' || !this.gamepiece) {\n\n\t\t\t// This has ended\n\t\t\tthis.swipeStart = null;\n\n\t\t\tif (e.gesture.deltaTime < 200) {\n\t\t\t\tthis.rotate();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\t// Start a new one\n\t\tif (type === 'start') {\n\t\t\t// Record the new start piece\n\t\t\tthis.swipeStartGamePiece = this.gamepiece;\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.swipeStartGamePiece !== this.gamepiece) {\n\t\t\t// This will force a new touch\n\t\t\treturn;\n\t\t}\n\n\n\t\t// Set the initial position of the block\n\t\tif (!this.swipeStart) {\n\t\t\tthis.swipeStart = {\n\t\t\t\tx: this.gamepiece.gx,\n\t\t\t\ty: this.gamepiece.gy\n\t\t\t};\n\t\t}\n\n\t\t// Using the delta positioning and the tile difference work out how far we can move this\n\t\tconst deltaX = parseInt(e.gesture.deltaX / this.tw, 10);\n\t\tconst deltaY = parseInt(e.gesture.deltaY / this.th, 10);\n\n\t\t// How far has the current grid changed\n\t\tconst x = this.swipeStart.x - this.gamepiece.gx + deltaX;\n\n\t\t// The y value can only be positive\n\t\tconst y = Math.max(this.swipeStart.y - this.gamepiece.gy + deltaY, 0);\n\n\t\t// \n\t\tthis.move({x, y});\n\n\t}\n\n\tend() {\n\t\tthis.credits.visible = true;\n\t\tthis.credits.calc(this);\n\n\n\t\t// Update info\n\t\tthis.info.visible = true;\n\t\tthis.info.calc(this);\n\t\tthis.info.y = this.info.y + this.credits.h;\n\t\tthis.info.text = `You scored ${this.score.text}`;\n\n\n\t\tthis.ended = true;\n\t}\n}\n\n\n// Add Stage to the background\nBackground.add(Stage);\n\n\n// Select a random item in an array\nfunction random(arr) {\n\treturn arr[Math.floor(arr.length * Math.random())];\n}"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset:utf-8;base64,"}